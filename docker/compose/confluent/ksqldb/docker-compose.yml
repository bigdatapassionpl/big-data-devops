version: "3.9"

services:

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.2.2
    hostname: ksqldb-server
    container_name: ksqldb-server
#    depends_on:
#      - broker
#      - connect
    ports:
      - "8088:8088"
    environment:
      KSQL_CONFIG_DIR: "/etc/ksql"
      KSQL_BOOTSTRAP_SERVERS: "broker:29092"
      KSQL_HOST_NAME: ksqldb-server
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      KSQL_KSQL_CONNECT_URL: "http://connect:8083"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

#  ksqldb-cli:
#    image: confluentinc/cp-ksqldb-cli:7.2.2
#    container_name: ksqldb-cli
#    depends_on:
#      - broker
#      - connect
#      - ksqldb-server
#    entrypoint: /bin/sh
#    tty: true

#  ksql-datagen:
#    image: confluentinc/ksqldb-examples:7.2.2
#    hostname: ksql-datagen
#    container_name: ksql-datagen
#    depends_on:
#      - ksqldb-server
#      - broker
#      - schema-registry
#      - connect
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b broker:29092 1 40 && \
#                       echo Waiting for Confluent Schema Registry to be ready... && \
#                       cub sr-ready schema-registry 8081 40 && \
#                       echo Waiting a few seconds for topic creation to finish... && \
#                       sleep 11 && \
#                       tail -f /dev/null'"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      STREAMS_BOOTSTRAP_SERVERS: broker:29092
#      STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
#      STREAMS_SCHEMA_REGISTRY_PORT: 8081

networks:
  default:
    name: bigdatanetwork
    driver: bridge
    external: true
