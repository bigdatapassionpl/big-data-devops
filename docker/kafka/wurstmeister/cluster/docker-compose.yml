version: '3.5'

services:

  zookeeper:
      container_name: cluster_zookeeper
      image: wurstmeister/zookeeper
      ports:
        - "2181:2181"
      networks:
        - kafkanetwork

  kafka1:
      container_name: cluster_kafka1
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9092:9092"
      hostname: cluster_kafka1
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - zookeeper

  kafka2:
      container_name: cluster_kafka2
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9093:9092"
      hostname: cluster_kafka2
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - kafka1

  kafka3:
      container_name: cluster_kafka3
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9094:9092"
      hostname: cluster_kafka3
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - kafka2

  kafka-manager:
      container_name: kafka_manager
      image: solsson/kafka-manager
      ports:
        - "9000:9000"
      hostname: kafka_manager
      networks:
        - kafkanetwork
      environment:
          ZK_HOSTS: cluster_zookeeper:2181
          APPLICATION_SECRET: letmein
          KM_ARGS: -Djava.net.preferIPv4Stack=true
      depends_on:
        - kafka3



networks:
  kafkanetwork:
    driver: bridge