version: '3.5'

services:

  zookeeper:
      container_name: zookeeper
      hostname: zookeeper
      image: wurstmeister/zookeeper
      ports:
        - "2181:2181"
      networks:
        - kafkanetwork

  kafka1:
      container_name: kafka1
      hostname: kafka1
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9092:9092"
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - zookeeper

  kafka2:
      container_name: kafka2
      hostname: kafka2
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9093:9092"
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - kafka1

  kafka3:
      container_name: kafka3
      hostname: kafka3
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9094:9092"
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - kafka2

  kafka-manager:
      container_name: kafka-manager
      hostname: kafka-manager
      image: solsson/kafka-manager
      ports:
        - "9000:9000"
      networks:
        - kafkanetwork
      depends_on:
        - kafka3
      environment:
          ZK_HOSTS: zookeeper:2181
          APPLICATION_SECRET: letmein
          KM_ARGS: -Djava.net.preferIPv4Stack=true

  schema-registry:
      container_name: schema-registry
      hostname: schema-registry
      image: confluentinc/cp-schema-registry:5.5.0
      ports:
        - 8085:8085
      networks:
        - kafkanetwork
      depends_on:
        - kafka-manager
      restart: always
      environment:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka1:9092

  rest-proxy:
      container_name: rest-proxy
      hostname: rest-proxy
      image: confluentinc/cp-kafka-rest:5.5.0
      ports:
        - 8082:8082
      networks:
        - kafkanetwork
      depends_on:
        - schema-registry
      restart: always
      environment:
          KAFKA_REST_HOST_NAME: rest-proxy
          KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
          KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8085
          KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092

  kafka-topics-ui:
      container_name: kafka-topics-ui
      hostname: kafka-topics-ui
      image: landoop/kafka-topics-ui:0.9.2
      ports:
        - 8000:8000
      networks:
        - kafkanetwork
      depends_on:
        - rest-proxy
      environment:
          KAFKA_REST_PROXY_URL: http://rest-proxy:8082
          PROXY: "TRUE"
      restart: always

networks:
  kafkanetwork:
    driver: bridge

# https://github.com/confluentinc/cp-all-in-one/blob/latest/cp-all-in-one-cloud/docker-compose.yml