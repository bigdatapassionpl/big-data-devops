version: '3.5'

services:

  zookeeper:
      container_name: cluster_zookeeper
      image: wurstmeister/zookeeper
      ports:
        - "2181:2181"
      networks:
        - kafkanetwork

  kafka1:
      container_name: cluster_kafka1
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9092:9092"
      hostname: cluster_kafka1
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - zookeeper

  kafka2:
      container_name: cluster_kafka2
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9093:9092"
      hostname: cluster_kafka2
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - kafka1

  kafka3:
      container_name: cluster_kafka3
      image: wurstmeister/kafka:2.12-2.1.0
      ports:
        - "9094:9092"
      hostname: cluster_kafka3
      networks:
        - kafkanetwork
      environment:
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ZOOKEEPER_CONNECT: cluster_zookeeper:2181
      depends_on:
        - kafka2

  kafka-manager:
      container_name: kafka-manager
      hostname: kafka-manager
      image: solsson/kafka-manager
      ports:
        - "9000:9000"
      networks:
        - kafkanetwork
      depends_on:
        - kafka3
      environment:
          ZK_HOSTS: cluster_zookeeper:2181
          APPLICATION_SECRET: letmein
          KM_ARGS: -Djava.net.preferIPv4Stack=true

  schema-registry:
      container_name: schema-registry
      hostname: schema-registry
      image: confluentinc/cp-schema-registry:5.5.0
      ports:
        - '8085:8085'
      networks:
        - kafkanetwork
      depends_on:
        - kafka-manager
      restart: always
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
        SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFIED_ALGORITHM: "http"
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: cluster_kafka1:9092
        SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: "PLAIN"

#  confluent-rest-proxy:
#      container_name: confluent-rest-proxy
#      image: confluentinc/cp-kafka-rest:3.2.1
#      networks:
#        - kafkanetwork
#      environment:
#        KAFKA_REST_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
#        KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181/kafka
#        KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
#        KAFKA_REST_SCHEMA_REGISTRY_URL: http://localhost:8081/
#        # please replace this setting by the IP of your web tools server
#        KAFKA_REST_HOST_NAME: "54.206.91.106"
#      depends_on:
#        - confluent-schema-registry
#      restart: always
#
#  kafka-topics-ui:
#      image: landoop/kafka-topics-ui:0.9.2
#      networks:
#        - kafkanetwork
#      environment:
#          KAFKA_REST_PROXY_URL: http://localhost:8082
#          PROXY: "TRUE"
#      depends_on:
#        - kafka3
#      restart: always

networks:
  kafkanetwork:
    driver: bridge